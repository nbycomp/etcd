# TODO: move to k8s.gcr.io/build-image/debian-base:bullseye-v1.y.z when patched
FROM debian:bullseye-20210927

ADD etcd /usr/local/bin/
ADD etcdctl /usr/local/bin/
RUN mkdir -p /var/etcd/
RUN mkdir -p /var/lib/etcd/

# Alpine Linux doesn't use pam, which means that there is no /etc/nsswitch.conf,
# but Golang relies on /etc/nsswitch.conf to check the order of DNS resolving
# (see https://github.com/golang/go/commit/9dee7771f561cf6aee081c0af6658cc81fac3918)
# To fix this we just create /etc/nsswitch.conf and add the following line:
RUN echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf

EXPOSE 2379 2380

# Define default command.
CMD ["/usr/local/bin/etcd"]

# syntax = docker/dockerfile:1-experimental
FROM registry.access.redhat.com/ubi8/ubi-init:latest as builder

RUN dnf install -y gcc make git && rm -rf /var/lib/apt/lists/*

ENV GOLANG_VERSION 1.19.8
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
ENV GOLANG_DOWNLOAD_SHA256 e1a0bf0ab18c8218805a1003fd702a41e2e807710b770e787e5979d1cf947aba

RUN curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
    && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
    && tar -C /usr/local -xzf golang.tar.gz \
    && rm golang.tar.gz

ENV PATH /usr/local/go/bin:$PATH

RUN mkdir -p /go/build && chmod -R 0755 /go

WORKDIR /go/src/github.com/coreos/etcd

ENV goos linux
ENV GOARCH amd64
ENV GO111MODULE on

COPY . .

RUN make

FROM registry.access.redhat.com/ubi8/ubi-minimal as redhat-production

RUN microdnf install shadow-utils.x86_64 && { groupadd -r nbycomp; \
    adduser -g nbycomp -m -s /bin/nologin nbycomp; \
    chown -R nbycomp:nbycomp /home/nbycomp; }

USER nbycomp

WORKDIR /var/lib/etcd/

EXPOSE 2379 2380

COPY --from=builder /go/src/github.com/coreos/etcd/bin/etcd /usr/local/bin/
COPY --from=builder /go/src/github.com/coreos/etcd/bin/etcdctl /usr/local/bin/

COPY LICENSE /licenses/

CMD ["/usr/local/bin/etcd"]
